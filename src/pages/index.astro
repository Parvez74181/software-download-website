---
import { Image } from "@astrojs/image/components";
import exploreSvg from "../../public/explore-bg-svg.svg";
import searchIconSvg from "../../public/search-icon.svg";
import Card from "../components/Card.astro";
import Loader from "../components/Loader.astro";
import prisma from "../../lib/prisma";
import Layout from "../layouts/Layout.astro";

const loading = false;

interface Blogs {
  thumbnail: String;
  title: String;
  slug: String;
  category: String;
  UID: String;
  createdAt: any;
}

let blogs: Blogs[];
const page = Number(Astro.url.searchParams.get("page")) || 1;
const pageSize = 20;

try {
  blogs = await prisma.software.findMany({
    orderBy: {
      createdAt: "desc",
    },
    select: {
      thumbnail: true,
      title: true,
      slug: true,
      category: true,
      UID: true,
      createdAt: true,
    },
    skip: ((page || 1) - 1) * pageSize, // Calculate the number of items to skip. ex: page is 2 then 2-1 = 1 and finallay pageSize is show many items do I want to show, so 1*pageSize = 1*12 = 12 to skip
    take: pageSize, // Define the number of items to take per page
  });
} catch (e) {
  console.log(e);
} finally {
  await prisma.$disconnect();
}

let totalBlogs: Number = await prisma.software.count();

const pageCount = Math.ceil(Number(totalBlogs) / pageSize);

let paginationItems: String[] = [];

// insert prev icon
paginationItems.push(
  `<li ><a class="cursor-pointer flex justify-center items-center w-9 h-9 ${
    page <= 1 && "opacity-50 cursor-default select-none"
  }" id='pagination-item' ${page > 1 && `href=/explore?page=${page - 1}`}>
    <img  src="/dropdown-icon.png" title="prev" height={20} width={20} loading='lazy' class="rotate-90" decoding='async' alt="prev button"/></a></li>`
);

for (let i = page - 3; i <= page + 3; i++) {
  // if i is negative number then continue the for loop
  if (i < 1) continue;
  else if (i > pageCount) break; // if i is greater then pageCount then break the for loop

  paginationItems.push(
    ` <li ><a class="cursor-pointer flex justify-center items-center w-9 h-9 rounded-full hover:bg-blue-500 hover:text-white hover:shadow-lg ${
      i === page && "bg-blue-500 text-white current"
    }" id='pagination-item' href='/explore?page=${i}'>${i}</a></li>`
  );
}

// insert next icon
paginationItems.push(
  `<li ><a class="cursor-pointer flex justify-center items-center w-9 h-9  ${
    page >= pageCount && "opacity-50 cursor-default select-none"
  }" id='pagination-item' ${
    page < pageCount && `href=/explore?page=${page + 1}`
  }> <img  src="/dropdown-icon.png" title="prev" height={20} width={20} loading='lazy' class="-rotate-90" decoding='async' alt="prev button"/></a></li>`
);
---

<Layout title=" Explore New Horizons on our Explore Page! | Explore | 10mBlogs">
  <main class={`min-h-screen`}>
    <section>
      {/* blogs */}

      <div class="mx-auto mt-5 w-[80%] md:w-[90%]">
        <h1
          id="all-post-title"
          class="ms-2 md:ms-20 text-3xl md:text-5xl max-h-[70px]"
        >
          All Posts
        </h1>
      </div>

      <div
        class="content flex flex-wrap justify-center items-center my-10 mx-auto gap-8 w-[90%]"
      >
        {
          loading ? (
            <div>
              <Loader />
            </div>
          ) : (
            blogs?.map((post) => <Card postData={post} />)
          )
        }
      </div>
    </section>

    <!-- pagination -->
    <div
      id="pagination"
      class="pagination w-full flex justify-center items-center px-20 my-10"
    >
      <ul
        class="flex gap-5 items-center pagination-ul"
        data-pagecount={pageCount}
        set:html={paginationItems}
      />
    </div>
  </main>
</Layout>

<style lang="scss">
  .heading-paragraph,
  .hero-section-heading {
    font-family: Gothic A1 !important;
  }
  .shadow-text {
    color: #eeeeee;
    font-family: Gothic A1 !important;
    font-style: normal;
    font-weight: 800;
    line-height: normal;
  }
</style>

<script defer>
  const searchInputBox = document.querySelector("#search-input");
  const searchIconBox = document.querySelector("#search-icon");

  searchInputBox.addEventListener("keyup", (e) => {
    searchHandler(e);
  });
  searchIconBox.addEventListener("click", (e) => {
    searchHandler(e);
  });

  //   searchHandler
  const searchHandler = (e) => {
    if (e.keyCode === 13 || e.key === "Enter") {
      let searchText = e.target.value.trim().toLowerCase();
      if (searchText) open(`/blog/search?search=${searchText}`, "_self");
    } else if (e.type === "click") {
      let parentNodeItem = e.target.parentNode;
      let searchInput = parentNodeItem.querySelector("#search-input");

      searchInput = searchInput?.value?.trim().toLowerCase();
      if (searchInput) open(`/blog/search?search=${searchInput}`, "_self");
    }
  };
</script>

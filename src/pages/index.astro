---
import { Image } from "@astrojs/image/components";
import Button from "../components/Button.astro";
import Card from "../components/Card.astro";
import Loader from "../components/Loader.astro";
import prisma from "../../lib/prisma";
import Layout from "../layouts/Layout.astro";

const loading = false;

interface Blogs {
  thumbnail: String;
  title: String;
  slug: String;
  category: String;
  UID: String;
  createdAt: any;
}

let windowsBlogs: Blogs[];
let macBlogs: Blogs[];
let iosBlogs: Blogs[];
let androidBlogs: Blogs[];

const pageSize = 20;
const page = 1;
let totalWindowsBlogs: number;
let totalMacBlogs: number;
let totalAndroidBlogs: number;
let totalIosBlogs: number;

try {
  windowsBlogs = await prisma.software.findMany({
    orderBy: {
      createdAt: "desc",
    },
    select: {
      thumbnail: true,
      title: true,
      slug: true,
      category: true,
      UID: true,
      createdAt: true,
    },
    where: {
      category: {
        equals: "windows",
      },
    },
    skip: ((page || 1) - 1) * pageSize, // Calculate the number of items to skip. ex: page is 2 then 2-1 = 1 and finallay pageSize is show many items do I want to show, so 1*pageSize = 1*12 = 12 to skip
    take: pageSize, // Define the number of items to take per page
  });

  macBlogs = await prisma.software.findMany({
    orderBy: {
      createdAt: "desc",
    },
    select: {
      thumbnail: true,
      title: true,
      slug: true,
      category: true,
      UID: true,
      createdAt: true,
    },
    where: {
      category: {
        equals: "mac",
      },
    },
    skip: ((page || 1) - 1) * pageSize, // Calculate the number of items to skip. ex: page is 2 then 2-1 = 1 and finallay pageSize is show many items do I want to show, so 1*pageSize = 1*12 = 12 to skip
    take: pageSize, // Define the number of items to take per page
  });

  iosBlogs = await prisma.software.findMany({
    orderBy: {
      createdAt: "desc",
    },
    select: {
      thumbnail: true,
      title: true,
      slug: true,
      category: true,
      UID: true,
      createdAt: true,
    },
    where: {
      category: {
        equals: "ios",
      },
    },
    skip: ((page || 1) - 1) * pageSize, // Calculate the number of items to skip. ex: page is 2 then 2-1 = 1 and finallay pageSize is show many items do I want to show, so 1*pageSize = 1*12 = 12 to skip
    take: pageSize, // Define the number of items to take per page
  });

  androidBlogs = await prisma.software.findMany({
    orderBy: {
      createdAt: "desc",
    },
    select: {
      thumbnail: true,
      title: true,
      slug: true,
      category: true,
      UID: true,
      createdAt: true,
    },
    where: {
      category: {
        equals: "android",
      },
    },
    skip: ((page || 1) - 1) * pageSize, // Calculate the number of items to skip. ex: page is 2 then 2-1 = 1 and finallay pageSize is show many items do I want to show, so 1*pageSize = 1*12 = 12 to skip
    take: pageSize, // Define the number of items to take per page
  });

  // totalWindowsBlogs = await prisma.software.count({
  //   where: {
  //     category: {
  //       equals: "windows",
  //     },
  //   },
  // });

  // totalMacBlogs = await prisma.software.count({
  //   where: {
  //     category: {
  //       equals: "mac",
  //     },
  //   },
  // });

  // totalAndroidBlogs = await prisma.software.count({
  //   where: {
  //     category: {
  //       equals: "android",
  //     },
  //   },
  // });

  // totalIosBlogs = await prisma.software.count({
  //   where: {
  //     category: {
  //       equals: "ios",
  //     },
  //   },
  // });
} catch (e) {
  console.log(e);
} finally {
  await prisma.$disconnect();
}
---

<Layout title="Download free software">
  <main class={`min-h-screen`}>
    <!-- windows section -->
    <section id="windows">
      <div class="mx-auto mt-5 w-[80%] md:w-[90%]">
        <h1
          class="ms-2 md:ms-20 text-2xl md:text-3xl w-[115px] md:w-[150px] post-category-title"
        >
          WINDOWS
        </h1>
      </div>

      <div
        class="content flex flex-wrap justify-center items-center my-10 mx-auto gap-8 w-[90%]"
      >
        {
          loading ? (
            <div>
              <Loader />
            </div>
          ) : (
            windowsBlogs?.map((post) => <Card postData={post} />)
          )
        }
      </div>
      {
        windowsBlogs.length == pageSize && (
          <a
            href="/category?category=windows&page=2"
            class="w-[90%] md:w-[50%] mx-auto relative block"
          >
            <Button text={"SEE ALL"} />
          </a>
        )
      }
    </section>

    <!-- mac section -->
    <section id="mac">
      <div class="mx-auto mt-5 w-[80%] md:w-[90%]">
        <h1
          class="ms-2 md:ms-20 text-2xl md:text-3xl w-[50px] md:w-[65px] post-category-title"
        >
          MAC
        </h1>
      </div>

      <div
        class="content flex flex-wrap justify-center items-center my-10 mx-auto gap-8 w-[90%]"
      >
        {
          loading ? (
            <div>
              <Loader />
            </div>
          ) : (
            macBlogs?.map((post) => <Card postData={post} />)
          )
        }
      </div>
      {
        macBlogs.length == pageSize && (
          <a
            href="/category?category=mac&page=2"
            class="w-[90%] md:w-[50%] mx-auto relative block"
          >
            <Button text={"SEE ALL"} />
          </a>
        )
      }
    </section>

    <!-- ios section -->
    <section id="ios">
      <div class="mx-auto mt-5 w-[80%] md:w-[90%]">
        <h1
          class="ms-2 md:ms-20 text-2xl md:text-3xl w-[40px] md:w-[50px] post-category-title"
        >
          IOS
        </h1>
      </div>

      <div
        class="content flex flex-wrap justify-center items-center my-10 mx-auto gap-8 w-[90%]"
      >
        {
          loading ? (
            <div>
              <Loader />
            </div>
          ) : (
            iosBlogs?.map((post) => <Card postData={post} />)
          )
        }
      </div>
      {
        iosBlogs.length == pageSize && (
          <a
            href="/category?category=ios&page=2"
            class="w-[90%] md:w-[50%] mx-auto relative block"
          >
            <Button text={"SEE ALL"} />
          </a>
        )
      }
    </section>

    <!-- android section -->
    <section id="android">
      <div class="mx-auto mt-5 w-[80%] md:w-[90%]">
        <h1
          class="ms-2 md:ms-20 text-2xl md:text-3xl w-[100px] md:w-[135px] post-category-title"
        >
          ANDROID
        </h1>
      </div>

      <div
        class="content flex flex-wrap justify-center items-center my-10 mx-auto gap-8 w-[90%]"
      >
        {
          loading ? (
            <div>
              <Loader />
            </div>
          ) : (
            androidBlogs?.map((post) => <Card postData={post} />)
          )
        }
      </div>
      {
        androidBlogs.length == pageSize && (
          <a
            href="/category?category=android&page=2"
            class="w-[90%] md:w-[50%] mx-auto relative block"
          >
            <Button text={"SEE ALL"} />
          </a>
        )
      }
    </section>
  </main>
</Layout>

<style lang="scss">
  .post-category-title {
    opacity: 0.9;
    position: relative;
    &::after {
      content: "";
      position: absolute;
      opacity: 0.9;
      bottom: -5px;
      left: 0;
      width: 100%;
      border-radius: 10px;
      height: 2px;
      background: #000;
    }
  }
  .heading-paragraph,
  .hero-section-heading {
    font-family: Gothic A1 !important;
  }
  .shadow-text {
    color: #eeeeee;
    font-family: Gothic A1 !important;
    font-style: normal;
    font-weight: 800;
    line-height: normal;
  }
</style>

<script defer>
  const searchInputBox = document.querySelector("#search-input");
  const searchIconBox = document.querySelector("#search-icon");

  searchInputBox.addEventListener("keyup", (e) => {
    searchHandler(e);
  });
  searchIconBox.addEventListener("click", (e) => {
    searchHandler(e);
  });

  //   searchHandler
  const searchHandler = (e) => {
    if (e.keyCode === 13 || e.key === "Enter") {
      let searchText = e.target.value.trim().toLowerCase();
      if (searchText) open(`/blog/search?search=${searchText}`, "_self");
    } else if (e.type === "click") {
      let parentNodeItem = e.target.parentNode;
      let searchInput = parentNodeItem.querySelector("#search-input");

      searchInput = searchInput?.value?.trim().toLowerCase();
      if (searchInput) open(`/blog/search?search=${searchInput}`, "_self");
    }
  };
</script>
